<?phpnamespace App\Controller;use Cake\Core\Configure;use Cake\Network\Exception\ForbiddenException;use Cake\Network\Exception\NotFoundException;use Cake\View\Exception\MissingTemplateException;class FlatsController extends AppController{	public function flats(){		$page = "houses";		$preloader_page_name = "Квартиры";		$alias = "flats";		$PA = $alias;		$check_block = $this->Model->checkBlock($alias);		if (!$check_block) {$this->Help->r2(RS."404/");}		$page_data = $this->Model->getFlatsPage();		if (isset($page_data['meta_title']) && $page_data['meta_title']) {			$meta_title = $page_data['meta_title'];			$this->set('meta_title', $meta_title);		}		if (isset($page_data['meta_desc']) && $page_data['meta_desc']) {			$meta_desc = $page_data['meta_desc'];			$this->set('meta_desc', $meta_desc);		}		if (isset($page_data['meta_keys']) && $page_data['meta_keys']) {			$meta_keys = $page_data['meta_keys'];			$this->set('meta_keys', $meta_keys);		}		$new_ev = $this->Model->getNewEv();		$this->set([			'preloader_page_name' => $preloader_page_name,			'page' => $page,			'page_data' => $page_data,			'PA' => $PA,			'new_ev' => $new_ev		]);	}		public function layout(){		$page = "houses";		$alias = "flats";		$PA = $alias;		$check_block = $this->Model->checkBlock($alias);		if (!$check_block) {$this->Help->r2(RS."404/");}				$house_url = str_replace('\'', '', str_replace('"', '', trim($this->url_exp[1])));		$room_url = str_replace('\'', '', str_replace('"', '', trim($this->url_exp[2])));		$room = $this->Model->getRoom($room_url);		$house = $this->Model->getHouse($house_url);		$room_id = $room['id'];		$room_alias = $room['alias'];		$house_id = $house['id'];		$house_alias = $house['alias'];		if (!$room || !$house) $this->Help->r2(RS."404/");		$room_banner = $this->Model->getRoomBanner($room['event_id']);				$layouts = $this->Model->getLayouts($house_id, $room_id);		$layout_total_areas = array();		foreach ($layouts as $key => $value) {			array_push($layout_total_areas, $value['total_area']);		}		$uni_layout_areas = array_unique($layout_total_areas);		$house_ru_name = $house['name'];		$room_ru_name = $room['name'];		if ($house_alias == 'finished') {			$preloader_page_name = $house_ru_name." | ".$room_ru_name;		}else{			$preloader_page_name = "Дом ".$house_ru_name." | ".$room_ru_name;		}		$r1_count = 0; $r2_count = 0; $r3_count = 0; $rn_count = 0;		$r1_count = $this->Model->layoutsByRoomCount(1, $house_id)['count'];		$r2_count = $this->Model->layoutsByRoomCount(2, $house_id)['count'];		$r3_count = $this->Model->layoutsByRoomCount(3, $house_id)['count'];		$rn_count = $this->Model->layoutsByRoomCount(4, $house_id)['count'];		$meta_data = $this->Model->getUniLayoutMeta($room_alias, $house_alias);		if (isset($meta_data['meta_title']) && $meta_data['meta_title']) {			$meta_title = $meta_data['meta_title'];			$this->set('meta_title', $meta_title);		}		if (isset($meta_data['meta_desc']) && $meta_data['meta_desc']) {			$meta_desc = $meta_data['meta_desc'];			$this->set('meta_desc', $meta_desc);		}		if (isset($meta_data['meta_keys']) && $meta_data['meta_keys']) {			$meta_keys = $meta_data['meta_keys'];			$this->set('meta_keys', $meta_keys);		}		$new_ev = $this->Model->getNewEv();		$this->set([			'preloader_page_name' => $preloader_page_name,			'page' => $page,			'house' => $house,			'room' => $room,			'layouts' => $layouts,			'room_banner' => $room_banner,			'uni_layout_areas' => $uni_layout_areas,			'PA' => $PA,			'r1_count' => $r1_count,			'r2_count' => $r2_count,			'r3_count' => $r3_count,			'rn_count' => $rn_count,			'new_ev' => $new_ev		]);	}}